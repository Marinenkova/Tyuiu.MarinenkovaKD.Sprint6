<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxCondition_МКД.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAARkAAAA3CAYAAAA4wT7lAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAFdhJREFUeF7t3XWMZEUXBfBN+JMEwj9AsBAITpDgC4HF3d3dXZfF3V0WWdzd3d3d
        3d3dob78Cmq/N2+6Z9p7Z7ZO8sLS08/rnjr33PteDwkZGRkZbUQmmYyMjLYik0xGRkZbkUkmIyOjrcgk
        k9En/v777/DLL7+EV155Jdx4443hlFNOCccff3wYNWpUuP/++8NHH30U/vzzz/++3Vn8888/cd8ffPBB
        ePDBB8N5550Xj+24444Ll1xySXjuuefC999/H88ho3vIJJNRFYL4559/Dm+88Ua44oorwvDhw8Nyyy0X
        hg0bFv87YsSIcNddd4XvvvuuK4H8xx9/hC+++CLcc8894dhjjw0bbrhhWHTRRcMCCywQVltttXD66aeH
        l19+Ofz+++//rZHRDWSSyagKKuGdd94JJ5xwQlQut99+e3jxxRfDQw89FP9/xRVXDEcffXR44YUXuhLI
        X3/9dbjjjjuigrnggguicnn++efDTTfdFHbaaaewxx57hHPPPTd88803Wc10EZlkMqpCYH711VdRKTz5
        5JMxNaIeKBfpyQYbbBAOPvjgmDZJqToNKksa99RTT0XycwyO7+23347KZt99941qJpNMd5FJJqNuCGTB
        TSkcddRR4c4774wBD4JZsH/yySfh3XffDV9++WX49ddfw19//RV+/PHH8Nlnn8W/+azVgS+9++233yLJ
        nHPOOdE/uuaaa+J+M7qHTDIZdUMgS5GkJFKpRx99NJIG/PTTTzFlOeyww8Imm2wSzjrrrEhI3377bVQ/
        FAb189prr8XvtgoIy3G9+eab4ZZbbon7ufXWW8OHH37YNWM6419kksmoG59//nm49957w6677houvvji
        8N5770V1I5j9jRl88sknhz333DPstdde0SN59dVXw/XXXx+rPqpUn376aSSFVkA69Pjjj4dDDz00HpMF
        yfGOKCwKJ6N7yCSTUTMEKzJhsCKXI444IjzwwAORLPyN+Ys8eDh8mhtuuCFss802kXCkVBTGW2+9FVMn
        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
</value>
  </data>
  <metadata name="X.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Y.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="X.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Y.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>